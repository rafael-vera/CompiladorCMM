/* Generated By:JavaCC: Do not edit this line. AnalizadorConstants.java */
package modelo;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalizadorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int L_PARENTHESIS = 1;
  /** RegularExpression Id. */
  int R_PARENTHESIS = 2;
  /** RegularExpression Id. */
  int L_BRACE = 3;
  /** RegularExpression Id. */
  int R_BRACE = 4;
  /** RegularExpression Id. */
  int COMMA = 5;
  /** RegularExpression Id. */
  int SEMICOLON = 6;
  /** RegularExpression Id. */
  int PLUS = 7;
  /** RegularExpression Id. */
  int MINUS = 8;
  /** RegularExpression Id. */
  int MULTIPLY = 9;
  /** RegularExpression Id. */
  int DIVISION = 10;
  /** RegularExpression Id. */
  int MOD = 11;
  /** RegularExpression Id. */
  int EQUAL = 12;
  /** RegularExpression Id. */
  int EQUALS = 13;
  /** RegularExpression Id. */
  int NOT_EQUALS = 14;
  /** RegularExpression Id. */
  int AND = 15;
  /** RegularExpression Id. */
  int OR = 16;
  /** RegularExpression Id. */
  int GREATER = 17;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 18;
  /** RegularExpression Id. */
  int LESS = 19;
  /** RegularExpression Id. */
  int LESS_EQUAL = 20;
  /** RegularExpression Id. */
  int IMPORT = 21;
  /** RegularExpression Id. */
  int IF = 22;
  /** RegularExpression Id. */
  int ELSE_IF = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int FOR = 26;
  /** RegularExpression Id. */
  int VOID = 27;
  /** RegularExpression Id. */
  int MAIN = 28;
  /** RegularExpression Id. */
  int RETURN = 29;
  /** RegularExpression Id. */
  int PRINT = 30;
  /** RegularExpression Id. */
  int INPUT = 31;
  /** RegularExpression Id. */
  int INT = 32;
  /** RegularExpression Id. */
  int FLOAT = 33;
  /** RegularExpression Id. */
  int CHAR = 34;
  /** RegularExpression Id. */
  int STRING = 35;
  /** RegularExpression Id. */
  int BOOL = 36;
  /** RegularExpression Id. */
  int INT_V = 37;
  /** RegularExpression Id. */
  int FLOAT_V = 38;
  /** RegularExpression Id. */
  int CHAR_V = 39;
  /** RegularExpression Id. */
  int STRING_V = 40;
  /** RegularExpression Id. */
  int BOOL_V = 41;
  /** RegularExpression Id. */
  int IDENTIFIER = 42;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int DentroComentario = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"import\"",
    "\"if\"",
    "\"else if\"",
    "\"else\"",
    "\"while\"",
    "\"for\"",
    "\"void\"",
    "\"main\"",
    "\"return\"",
    "\"print\"",
    "\"input\"",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"string\"",
    "\"bool\"",
    "<INT_V>",
    "<FLOAT_V>",
    "<CHAR_V>",
    "<STRING_V>",
    "<BOOL_V>",
    "<IDENTIFIER>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 45>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\n\\r\"",
  };

}
